android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.android.vending.licensing.ILicensingService -> com.android.vending.licensing.ILicensingService:
com.cepmuvakkit.conversion.GPSTracker -> com.cepmuvakkit.conversion.a:
    android.content.Context mContext -> i
    boolean isGPSEnabled -> a
    boolean isNetworkEnabled -> b
    boolean canGetLocation -> c
    android.location.Location location -> d
    double latitude -> e
    double longitude -> f
    double altitude -> g
    android.location.LocationManager locationManager -> h
    android.location.Location getLocation() -> a
    void stopUsingGPS() -> b
    double getLatitude() -> c
    double getAltitude() -> d
    double getLongitude() -> e
    java.lang.String getLocationName(double,double) -> a
    boolean canGetLocation() -> f
    void showSettingsAlert() -> g
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    android.os.IBinder onBind(android.content.Intent) -> onBind
    android.content.Context access$0(com.cepmuvakkit.conversion.GPSTracker) -> a
com.cepmuvakkit.conversion.GPSTracker$1 -> com.cepmuvakkit.conversion.b:
    com.cepmuvakkit.conversion.GPSTracker this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cepmuvakkit.conversion.GPSTracker$2 -> com.cepmuvakkit.conversion.c:
    com.cepmuvakkit.conversion.GPSTracker this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cepmuvakkit.conversion.HijriCalendarTab -> com.cepmuvakkit.conversion.HijriCalendarTab:
    com.cepmuvakkit.conversion.views.MoonCanvasView moonCanvasView -> a
    int temperature -> b
    int pressure -> c
    int altitude -> d
    double mLatitude -> e
    double mLongitude -> f
    double mTimeZone -> g
    double moonPhase -> h
    double timezoneinDay -> i
    java.lang.String mLocationName -> j
    android.widget.Button mPickDate -> k
    android.widget.Button mPickTime -> l
    android.widget.Button mPreviousButton -> m
    android.widget.Button mNextButton -> n
    android.widget.TextView mDateHijri -> o
    android.widget.TextView mPositionValues -> p
    android.widget.TextView mCityName -> q
    android.widget.TextView mMoonRise -> r
    android.widget.TextView mMoonTransit -> s
    android.widget.TextView mMoonSet -> t
    android.widget.TextView mLit -> u
    android.widget.TextView mAzimuth -> v
    android.widget.TextView mAltitude -> w
    android.widget.TextView mMoonAge -> x
    android.widget.TextView mLunation -> y
    android.widget.TextView mSunSet -> z
    android.widget.TextView mJulianDate -> A
    android.widget.TextView mMoonDistance -> B
    android.widget.TextView mNewMoon -> C
    android.widget.TextView mNewCrescent -> D
    android.widget.TextView mFirstQuarter -> E
    android.widget.TextView mFullMoon -> F
    android.widget.TextView mLastQuarter -> G
    android.widget.TextView mSolarEclipse -> H
    android.widget.TextView mLunarEclipse -> I
    android.widget.TextView mSunElevation -> J
    android.widget.TextView mMoonStatus -> K
    android.widget.ImageView mImageViewMoon -> L
    com.cepmuvakkit.times.posAlgo.SunMoonPosition sunMoonPosition -> M
    double moonAge -> N
    double jd -> O
    double mSunsetHour -> P
    double ?T -> Q
    java.text.DecimalFormat twoDigitFormat -> R
    java.text.DecimalFormat oneDigit -> S
    java.text.DecimalFormat twoDigit -> T
    java.text.DateFormat dfTr -> U
    java.text.DateFormat dfTime -> V
    java.text.DateFormat dfDate -> W
    android.content.SharedPreferences preferences -> X
    int w -> Y
    int h -> Z
    double[] moonPhasesJd -> aa
    int[] eclipses -> ab
    com.cepmuvakkit.conversion.GPSTracker gps -> ac
    android.app.DatePickerDialog$OnDateSetListener mDateSetListener -> ad
    android.app.TimePickerDialog$OnTimeSetListener mTimeSetListener -> ae
    void onCreate(android.os.Bundle) -> onCreate
    void updateDisplayDate() -> b
    void updateHijriDisplay(android.content.Context) -> a
    void updateDisplayTime() -> c
    void updatePhaseAndEclipses() -> d
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void returnCurrentJulianDay() -> e
    void updateLocationInfo() -> a
    void updateMoonInformation() -> f
    void runLocation() -> g
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openConversion(android.view.View) -> openConversion
    void setTimetoNewMoon(android.view.View) -> setTimetoNewMoon
    void setTimetoNewCrescent(android.view.View) -> setTimetoNewCrescent
    void setTimetoFirstQuarter(android.view.View) -> setTimetoFirstQuarter
    void setTimetoFullMoon(android.view.View) -> setTimetoFullMoon
    void setTimetoLastQuarter(android.view.View) -> setTimetoLastQuarter
    void setTimetoReal(android.view.View) -> setTimetoReal
    void setTimetoSunSet(android.view.View) -> setTimetoSunSet
    double access$0(com.cepmuvakkit.conversion.HijriCalendarTab) -> a
    double access$1(com.cepmuvakkit.conversion.HijriCalendarTab) -> b
    void access$2(com.cepmuvakkit.conversion.HijriCalendarTab,double) -> a
    void access$3(com.cepmuvakkit.conversion.HijriCalendarTab) -> c
    void access$4(com.cepmuvakkit.conversion.HijriCalendarTab) -> d
    double[] access$5(com.cepmuvakkit.conversion.HijriCalendarTab) -> e
    void access$6(com.cepmuvakkit.conversion.HijriCalendarTab) -> f
    void access$7(com.cepmuvakkit.conversion.HijriCalendarTab) -> g
com.cepmuvakkit.conversion.HijriCalendarTab$1 -> com.cepmuvakkit.conversion.d:
    com.cepmuvakkit.conversion.HijriCalendarTab this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.cepmuvakkit.conversion.HijriCalendarTab$2 -> com.cepmuvakkit.conversion.e:
    com.cepmuvakkit.conversion.HijriCalendarTab this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.cepmuvakkit.conversion.HijriCalendarTab$3 -> com.cepmuvakkit.conversion.f:
    com.cepmuvakkit.conversion.HijriCalendarTab this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.HijriCalendarTab$4 -> com.cepmuvakkit.conversion.g:
    com.cepmuvakkit.conversion.HijriCalendarTab this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.HijriCalendarTab$5 -> com.cepmuvakkit.conversion.h:
    com.cepmuvakkit.conversion.HijriCalendarTab this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.HijriCalendarTab$6 -> com.cepmuvakkit.conversion.i:
    com.cepmuvakkit.conversion.HijriCalendarTab this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.HijriCalendarWidgetGreen -> com.cepmuvakkit.conversion.HijriCalendarWidgetGreen:
    android.content.SharedPreferences preferences -> a
    int mYear -> b
    int mMonth -> c
    int mDay -> d
    int mHour -> e
    int mMinute -> f
    int mSecond -> g
    double mLatitude -> h
    double mLongitude -> i
    double mTimeZone -> j
    double mSunsetHour -> k
    double jd -> l
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void returnCurrentJulianDay() -> a
com.cepmuvakkit.conversion.HijriCalendarWidgetRL -> com.cepmuvakkit.conversion.HijriCalendarWidgetRL:
    android.content.SharedPreferences preferences -> a
    int mYear -> b
    int mMonth -> c
    int mDay -> d
    int mHour -> e
    int mMinute -> f
    int mSecond -> g
    double mLatitude -> h
    double mLongitude -> i
    double mTimeZone -> j
    double mSunsetHour -> k
    double jd -> l
    boolean isAfterMagrib -> m
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void returnCurrentJulianDay() -> a
com.cepmuvakkit.conversion.HijriConversion -> com.cepmuvakkit.conversion.HijriConversion:
    android.widget.EditText dayText -> a
    android.widget.EditText yearText -> b
    android.widget.TextView mDateDisplay -> c
    android.widget.Button mConvertButton -> d
    android.widget.CheckBox isAfterMagribChkBx -> e
    android.widget.Button mPreviousButton -> f
    android.widget.Button mNextButton -> g
    android.widget.Spinner s1 -> h
    int mYear -> i
    int mMonth -> j
    int mDay -> k
    double jd -> l
    boolean isAfterMagrib -> m
    void onCreate(android.os.Bundle) -> onCreate
    void updateHijriDisplay(android.content.Context) -> a
    void updateGregorianDisplay() -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.lang.String[] getMonthStrings() -> a
    void access$0(com.cepmuvakkit.conversion.HijriConversion,boolean) -> a
    void access$1(com.cepmuvakkit.conversion.HijriConversion,android.content.Context) -> a
    double access$2(com.cepmuvakkit.conversion.HijriConversion) -> a
    void access$3(com.cepmuvakkit.conversion.HijriConversion,double) -> a
    void access$4(com.cepmuvakkit.conversion.HijriConversion,int) -> a
    void access$5(com.cepmuvakkit.conversion.HijriConversion,int) -> b
    void access$6(com.cepmuvakkit.conversion.HijriConversion,int) -> c
    void access$7(com.cepmuvakkit.conversion.HijriConversion) -> b
    android.widget.EditText access$8(com.cepmuvakkit.conversion.HijriConversion) -> c
    android.widget.Spinner access$9(com.cepmuvakkit.conversion.HijriConversion) -> d
    android.widget.EditText access$10(com.cepmuvakkit.conversion.HijriConversion) -> e
com.cepmuvakkit.conversion.HijriConversion$1 -> com.cepmuvakkit.conversion.j:
    com.cepmuvakkit.conversion.HijriConversion this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.cepmuvakkit.conversion.HijriConversion$2 -> com.cepmuvakkit.conversion.k:
    com.cepmuvakkit.conversion.HijriConversion this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
com.cepmuvakkit.conversion.HijriConversion$3 -> com.cepmuvakkit.conversion.l:
    com.cepmuvakkit.conversion.HijriConversion this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.HijriConversion$4 -> com.cepmuvakkit.conversion.m:
    com.cepmuvakkit.conversion.HijriConversion this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.HijriConversion$5 -> com.cepmuvakkit.conversion.n:
    com.cepmuvakkit.conversion.HijriConversion this$0 -> a
    void onClick(android.view.View) -> onClick
com.cepmuvakkit.conversion.MoonInfoWidget -> com.cepmuvakkit.conversion.MoonInfoWidget:
    int mYear -> a
    int mMonth -> b
    int mDay -> c
    int mHour -> d
    int mMinute -> e
    int mSecond -> f
    int temperature -> g
    int pressure -> h
    int altitude -> i
    double mLatitude -> j
    double mLongitude -> k
    double mTimeZone -> l
    double moonAge -> m
    double jd -> n
    com.cepmuvakkit.times.posAlgo.SunMoonPosition sunMoonPosition -> o
    java.text.DecimalFormat oneDigit -> p
    android.content.SharedPreferences preferences -> q
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void returnCurrentJulianDay() -> a
    java.lang.String pad(int) -> a
com.cepmuvakkit.conversion.R -> com.cepmuvakkit.conversion.o:
com.cepmuvakkit.conversion.R$styleable -> com.cepmuvakkit.conversion.p:
    int[] LunarPhaseIcons -> LunarPhaseIcons
    int LunarPhaseIcons_phase -> LunarPhaseIcons_phase
com.cepmuvakkit.conversion.hicricalendar.HicriCalendar -> com.cepmuvakkit.conversion.a.a:
    byte dayOfWeek -> f
    java.lang.String[] ismiSuhiri -> g
    int Lunation -> h
    int hijriYear -> i
    int hijriMonth -> j
    int hijriDay -> k
    boolean[] isFound -> l
    double tNewMoon -> m
    double moonAgeConjuction -> n
    double tCrescent -> o
    double synmonth -> a
    double dt -> b
    double dtc -> c
    double acc -> d
    double LunatBase -> e
    int getHijriYear() -> a
    java.lang.String getHicriTakvim(android.content.Context) -> a
    java.lang.String getHijriMonthName(android.content.Context) -> b
    int getHijriDay() -> b
    java.lang.String checkIfHolyDay(android.content.Context,boolean) -> a
    java.lang.String getDay(android.content.Context) -> c
    int getLunation() -> c
    double getMoonAge() -> d
com.cepmuvakkit.conversion.libration.Moon -> com.cepmuvakkit.conversion.b.a:
    double B_Moon -> a
    double L_Moon -> b
    double T -> c
    double frac(double) -> a
    void computeMoon(double) -> b
    double lambda() -> a
com.cepmuvakkit.conversion.libration.MoonDistance -> com.cepmuvakkit.conversion.b.b:
    double jde -> a
    double computeR() -> a
com.cepmuvakkit.conversion.libration.MoonPositionAngle -> com.cepmuvakkit.conversion.b.c:
    double jd -> a
    double distance -> b
    com.cepmuvakkit.conversion.libration.MoonDistance moonDist -> c
    com.cepmuvakkit.conversion.libration.compute comp -> d
    com.cepmuvakkit.conversion.libration.Moon moon -> e
    double latitude -> f
    double longitude -> g
    double RA -> h
    double dec -> i
    double elev -> j
    double lambda -> k
    double Ls -> l
    double pAngleAxis -> m
    double getPositionAngleAxis() -> a
    double frac(double) -> a
    double computeMoon(double,int) -> a
    double moonParal(double,double) -> a
    double pAngle(double,double,double) -> a
    double lib(double,double,int) -> a
    double refract(double) -> b
    double ParallacticAngle() -> b
    double GM_Sidereal_Time(double) -> c
    double moon_LHA(double,double,double) -> b
com.cepmuvakkit.conversion.libration.compute -> com.cepmuvakkit.conversion.b.d:
    double K -> a
    char deg -> b
    double GM_Sidereal_Time(double) -> a
    double frac(double) -> b
    double LM_Sidereal_Time(double,double) -> a
    double sun_elev(double,double,double,double,double) -> a
com.cepmuvakkit.conversion.phaseEvents.MonthPhases -> com.cepmuvakkit.conversion.c.a:
    boolean[] isFound -> d
    double[] moonPhasesJd -> e
    int[] eclipses -> f
    double tMoonPhase -> g
    double tCrescent -> h
    double dt -> a
    double dtc -> b
    double acc -> c
    int SolarEclipseFlag(double,double,boolean) -> a
    int LunarEclipseFlag(double,double,boolean) -> b
    double[] getMoonPhasesJd() -> a
    int[] getEclipses() -> b
com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases -> com.cepmuvakkit.conversion.c.b:
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases NewMoon -> a
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases FirstQuarter -> b
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases FullMoon -> c
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases LastQuarter -> d
    int angle -> e
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases[] ENUM$VALUES -> f
    int getAngle() -> a
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases[] values() -> values
    com.cepmuvakkit.conversion.phaseEvents.MonthPhases$Phases valueOf(java.lang.String) -> valueOf
com.cepmuvakkit.conversion.phaseEvents.MoonPhases -> com.cepmuvakkit.conversion.c.c:
    com.cepmuvakkit.times.posAlgo.SolarPosition solar -> a
    com.cepmuvakkit.times.posAlgo.LunarPosition lunar -> b
    com.cepmuvakkit.times.posAlgo.Ecliptic moonPos -> c
    com.cepmuvakkit.times.posAlgo.Ecliptic solarPos -> d
    double searchPhaseEvent(double,double,int) -> a
    double modulo(double,double) -> a
    double frac(double) -> a
com.cepmuvakkit.conversion.settings.LunarCalendarSettings -> com.cepmuvakkit.conversion.settings.a:
    com.cepmuvakkit.conversion.settings.LunarCalendarSettings instance -> a
    boolean isManualInput -> b
    boolean isDataFromGPS -> c
    java.lang.String customCity -> d
    double longitude -> e
    double latitude -> f
    double timezone -> g
    double julianDay -> h
    int temperature -> i
    int elongation -> j
    int pressure -> k
    int altitude -> l
    void setJulianDay(double) -> a
    com.cepmuvakkit.conversion.settings.LunarCalendarSettings getInstance() -> a
    java.lang.String getCustomCity() -> b
    void setCustomCity(java.lang.String) -> a
    double getTimezone() -> c
    void setTimezone(double) -> b
    int getTemperature() -> d
    int getPressure() -> e
    int getAltitude() -> f
    void setAltitude(int) -> a
    boolean isManualInput() -> g
    double getLatitude() -> h
    double getLongitude() -> i
    void setLongitude(double) -> c
    void setLatitude(double) -> d
    void load(android.content.SharedPreferences) -> a
    void save(android.content.SharedPreferences) -> b
com.cepmuvakkit.conversion.settings.MoonCalendarPreferenceActivity -> com.cepmuvakkit.conversion.settings.MoonCalendarPreferenceActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.cepmuvakkit.conversion.views.LunarPhaseIcons -> com.cepmuvakkit.conversion.views.LunarPhaseIcons:
    int parentWidth -> b
    android.content.Context paramContext -> a
    int parentHeight -> c
    int radius -> d
    int offset -> e
    float strokeWidth -> f
    java.lang.String phase -> g
    android.graphics.Paint paint -> h
    android.graphics.RectF rect -> i
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void setPhase(java.lang.String) -> setPhase
com.cepmuvakkit.conversion.views.MoonCanvasView -> com.cepmuvakkit.conversion.views.a:
    com.cepmuvakkit.times.posAlgo.SunMoonPosition sunMoonPosition -> a
    android.graphics.drawable.Drawable mCustomImage -> b
    double moonPhase -> c
    double latitude -> d
    double longitude -> e
    double jd -> f
    double ?T -> g
    android.graphics.Paint paint -> h
    android.graphics.Paint paintFullMoon -> i
    android.graphics.Bitmap fullMoonImg -> j
    android.graphics.Bitmap moonMask -> k
    android.graphics.Bitmap moonCanvasBmp -> l
    android.graphics.Canvas canvas -> m
    float rotation -> n
    float posAngleAxis -> o
    boolean afterFullMoon -> p
    android.content.Context context -> q
    int w -> r
    int h -> s
    int diameter -> t
    float getPosAngleAxis() -> getPosAngleAxis
    void initMoonCanvasView(android.content.Context) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Bitmap getBitmapImage() -> getBitmapImage
    android.graphics.Bitmap makeFullMoon(android.graphics.drawable.Drawable,float) -> a
    android.graphics.Bitmap makeMoonMask(double,float) -> a
    void setParameters(double,double,double,double,double,boolean,int,int) -> a
com.cepmuvakkit.times.posAlgo.AstroLib -> com.cepmuvakkit.a.a.a:
    double calculateJulianDay(int,int,int,int,int,int,double) -> a
    double calculateJulianDay(java.util.Calendar) -> a
    double getJulianEphemerisDay(double,double) -> a
    double getJulianEphemerisCentury(double) -> a
    double getJulianEphemerisMillennium(double) -> b
    double calculateTimeDifference(double) -> c
    int[] convertHour2HHMM(double) -> d
    java.lang.String getStringHHMM(double) -> e
    java.lang.String intTwoDigit(int) -> a
    int[] fromJulian(double) -> f
    int[] getYMDHMSfromJulian(double) -> g
    java.util.GregorianCalendar convertJulian2Gregorian(double) -> h
    double thirdOrderPolynomial(double,double,double,double,double) -> a
    double fourthOrderPolynomial(double,double,double,double,double,double) -> a
    double getApparentAtmosphericRefraction(double) -> i
    double getWeatherCorrectionCoefficent(int,int) -> a
    double getAltitudeCorrection(int) -> b
    double limitDegrees(double) -> j
    double Pegasus(com.cepmuvakkit.conversion.phaseEvents.MoonPhases,double,double,double,double,boolean[],int) -> a
com.cepmuvakkit.times.posAlgo.Ecliptic -> com.cepmuvakkit.a.a.b:
    double ? -> a
    double ? -> b
    double ? -> c
com.cepmuvakkit.times.posAlgo.Equatorial -> com.cepmuvakkit.a.a.c:
    double ? -> a
    double ? -> b
    double ? -> c
    com.cepmuvakkit.times.posAlgo.Horizontal Equ2Topocentric(double,double,double,double,double) -> a
    double ?sin?Prime(double,double) -> a
    double ?Cos?Prime(double,double) -> b
    double getHorizontalParallax(double) -> a
com.cepmuvakkit.times.posAlgo.Horizontal -> com.cepmuvakkit.a.a.d:
    double h -> a
    double Az -> b
    double getElevation() -> a
    double getAzimuth() -> b
com.cepmuvakkit.times.posAlgo.LunarPosition -> com.cepmuvakkit.a.a.e:
    byte cD -> a
    byte cM -> b
    byte cMP -> c
    byte cF -> d
    byte cSin -> e
    byte cCos -> f
    byte[][] argCoeffor?l?r -> g
    int[][] coefSinCos?l?r -> h
    byte[][] argCoeffor?b -> i
    int[] coefSin?b -> j
    double meanElongationMoonSun(double) -> b
    double meanMoonLongitude(double) -> c
    double meanAnomalySun(double) -> d
    double meanAnomalyMoon(double) -> e
    double argumentLatitudeMoon(double) -> f
    double eccentrityOfEarthOrbit(double) -> g
    double effectVenus(double) -> h
    double effectJupiter(double) -> i
    double effectFlatting(double) -> j
    com.cepmuvakkit.times.posAlgo.Ecliptic calculateMoonEclipticCoordinates(double,double) -> a
    com.cepmuvakkit.times.posAlgo.Ecliptic calculateMoonEclipticCoordinatesAstronomic(double,double) -> b
    com.cepmuvakkit.times.posAlgo.Equatorial calculateMoonEquatorialCoordinates(double,double) -> c
    com.cepmuvakkit.times.posAlgo.Equatorial calculateMoonEqutarialCoordinates(com.cepmuvakkit.times.posAlgo.Ecliptic,double,double) -> a
    double[] summation?l?r(double,double,double,double,double,double) -> a
    double summation?b(double,double,double,double,double,double) -> b
    double[] calculateMoonRiseTransitSet(double,double,double,double,int,int,int) -> a
    double getHorizontalParallax(double) -> a
    double getLunarRiseSetAltitude(double,int,int,int) -> a
com.cepmuvakkit.times.posAlgo.MATH -> com.cepmuvakkit.a.a.f:
    double acos(double) -> a
    double asin(double) -> b
    double atan(double) -> c
    double atan2(double,double) -> a
    double pow(double,double) -> b
    double exp(double) -> d
    double _log(double) -> f
    double log(double) -> e
com.cepmuvakkit.times.posAlgo.SolarPosition -> com.cepmuvakkit.a.a.g:
    byte L_COUNT -> a
    byte B_COUNT -> b
    byte R_COUNT -> c
    byte Y_COUNT -> d
    double SUNRADIUS -> e
    byte FAJR -> f
    byte SUNRISE -> g
    byte SUNTRANSIT -> h
    byte ASR_SHAFI -> i
    byte ASR_HANEFI -> j
    byte SUNSET -> k
    byte ISHA -> l
    byte SUN_COUNT -> m
    byte FAJR_ -> n
    byte ISRAK -> o
    byte SUNTRANSIT_ -> p
    byte ASRHANEFI -> q
    byte ISFIRAR -> r
    byte SUNSET_ -> s
    byte KERAHAT_COUNT -> t
    byte DUHA -> u
    byte ISTIVA -> v
    double[][][] LTERMS -> w
    double[][][] BTERMS -> x
    double[][][] RTERMS -> y
    byte[][] YTERMS -> z
    double[][] PETERMS -> A
    double limitDegrees(double) -> a
    double limitDegrees180pm(double) -> b
    double limitDegrees180(double) -> c
    double limitZero2one(double) -> d
    double dayFracToLocalHour(double,double) -> a
    double earthHeliocentricLongitude(double) -> i
    double earthRadiusVector(double) -> j
    double earthHeliocentricLatitude(double) -> k
    double earthPeriodicTermSummation(double[][],int,double) -> a
    double earthValues(double[],int,double) -> a
    double getGeocentricLatitude(double) -> e
    double geocentricLongitude(double) -> f
    double meanElongationMoonSun(double) -> l
    double meanAnomalySun(double) -> m
    double meanAnomalyMoon(double) -> n
    double argumentLatitudeMoon(double) -> o
    double ascendingLongitudeMoon(double) -> p
    double xyTermSummation(int,double[]) -> a
    double nutationObliquity(double,double[]) -> a
    double nutationLongitude(double,double[]) -> b
    double eclipticTrueObliquity(double,double) -> b
    double apparentSunLongitude(double,double,double) -> g
    double aberrationCorrection(double) -> q
    double eclipticMeanObliquity(double) -> g
    double greenwichMeanSiderealTime(double) -> h
    double greenwichSiderealTime(double,double,double) -> a
    double geocentricRightAscension(double,double,double) -> b
    double geocentricDeclination(double,double,double) -> c
    double approxSunTransitTime(double,double,double) -> d
    double getHourAngleAtRiseSet(double,double,double) -> e
    void approxSunRiseAndSet(double[],double) -> a
    double rtsAlphaDeltaPrime(double[],double) -> b
    double Interpolate(double,double[]) -> c
    double rtsSunAltitude(double,double,double) -> f
    double sunRiseAndSet(double[],double[],double[],double,double[],double,int) -> a
    double[] calculateSunRiseTransitSet(double,double,double,double,double) -> a
    com.cepmuvakkit.times.posAlgo.Equatorial calculateSunEquatorialCoordinates(double,double) -> c
    com.cepmuvakkit.times.posAlgo.Equatorial calculateSunEquatorialCoordinates(com.cepmuvakkit.times.posAlgo.Ecliptic,double,double) -> a
    com.cepmuvakkit.times.posAlgo.Ecliptic calculateSunEclipticCoordinatesAstronomic(double,double) -> d
    double calculateGreenwichSiderealTime(double,double) -> e
    double[] calculateXArray(double,double) -> f
com.cepmuvakkit.times.posAlgo.SunMoonPosition -> com.cepmuvakkit.a.a.h:
    com.cepmuvakkit.times.posAlgo.Horizontal sunPosition -> a
    com.cepmuvakkit.times.posAlgo.Horizontal moonPosition -> b
    double moonPhase -> c
    double E -> d
    com.cepmuvakkit.times.posAlgo.SolarPosition solar -> e
    com.cepmuvakkit.times.posAlgo.LunarPosition lunar -> f
    com.cepmuvakkit.times.posAlgo.Ecliptic moonPosEc -> g
    com.cepmuvakkit.times.posAlgo.Ecliptic solarPosEc -> h
    com.cepmuvakkit.times.posAlgo.Equatorial moonPosEq -> i
    com.cepmuvakkit.times.posAlgo.Equatorial solarPosEq -> j
    double getDistance() -> a
    com.cepmuvakkit.times.posAlgo.Horizontal getMoonPosition() -> b
    double getMoonIllimunated() -> c
    double getTopocentricSunAltitude() -> d
