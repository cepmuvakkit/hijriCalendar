com.android.vending.licensing.AESObfuscator:
    private static final java.lang.String UTF8
    private static final java.lang.String KEYGEN_ALGORITHM
    private static final java.lang.String CIPHER_ALGORITHM
    private static final java.lang.String header
com.android.vending.licensing.ILicenseResultListener$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_verifyLicense
com.android.vending.licensing.ILicenseResultListener$Stub$Proxy:
    79:79:public java.lang.String getInterfaceDescriptor()
com.android.vending.licensing.ILicensingService$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_checkLicense
    19:22:public ILicensingService$Stub()
    40:40:public android.os.IBinder asBinder()
com.android.vending.licensing.ILicensingService$Stub$Proxy:
    79:79:public java.lang.String getInterfaceDescriptor()
com.android.vending.licensing.LicenseChecker:
    private static final java.lang.String TAG
    private static final java.lang.String KEY_FACTORY_ALGORITHM
    private static final int TIMEOUT_MS
com.android.vending.licensing.LicenseValidator:
    private static final java.lang.String TAG
    private static final int LICENSED
    private static final int NOT_LICENSED
    private static final int LICENSED_OLD_KEY
    private static final int ERROR_NOT_MARKET_MANAGED
    private static final int ERROR_SERVER_FAILURE
    private static final int ERROR_OVER_QUOTA
    private static final int ERROR_CONTACTING_SERVER
    private static final int ERROR_INVALID_PACKAGE_NAME
    private static final int ERROR_NON_MATCHING_UID
    private static final java.lang.String SIGNATURE_ALGORITHM
com.android.vending.licensing.PreferenceObfuscator:
    private static final java.lang.String TAG
com.android.vending.licensing.ServerManagedPolicy:
    private static final java.lang.String TAG
    private static final java.lang.String PREFS_FILE
    private static final java.lang.String PREF_LAST_RESPONSE
    private static final java.lang.String PREF_VALIDITY_TIMESTAMP
    private static final java.lang.String PREF_RETRY_UNTIL
    private static final java.lang.String PREF_MAX_RETRIES
    private static final java.lang.String PREF_RETRY_COUNT
    private static final java.lang.String DEFAULT_VALIDITY_TIMESTAMP
    private static final java.lang.String DEFAULT_RETRY_UNTIL
    private static final java.lang.String DEFAULT_MAX_RETRIES
    private static final java.lang.String DEFAULT_RETRY_COUNT
    private static final long MILLIS_PER_MINUTE
    154:154:public long getRetryCount()
    180:180:public long getValidityTimestamp()
    206:206:public long getRetryUntil()
    232:232:public long getMaxRetries()
com.android.vending.licensing.StrictPolicy
com.android.vending.licensing.ValidationException:
    private static final long serialVersionUID
com.android.vending.licensing.util.Base64:
    public static final boolean ENCODE
    public static final boolean DECODE
    private static final byte EQUALS_SIGN
    private static final byte NEW_LINE
    private static final byte WHITE_SPACE_ENC
    private static final byte EQUALS_SIGN_ENC
    258:258:public static java.lang.String encodeWebSafe(byte[],boolean)
    431:432:public static byte[] decodeWebSafe(java.lang.String)
    445:445:public static byte[] decode(byte[])
    458:458:public static byte[] decodeWebSafe(byte[])
    489:489:public static byte[] decodeWebSafe(byte[],int,int)
com.android.vending.licensing.util.Base64DecoderException:
    private static final long serialVersionUID
com.cepmuvakkit.conversion.BuildConfig
com.cepmuvakkit.conversion.GPSTracker:
    private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES
    private static final long MIN_TIME_BW_UPDATES
com.cepmuvakkit.conversion.HijriCalendar:
    private static final java.lang.String BASE64_PUBLIC_KEY
com.cepmuvakkit.conversion.HijriCalendarTab:
    public static final java.lang.String JULIAN_DAY
    public static final java.lang.String LATITUDE
    public static final java.lang.String LONGITUDE
    public static final java.lang.String TIMEZONE
    public static final java.lang.String TEMPERATURE
    public static final java.lang.String PRESSURE
    public static final java.lang.String ALTITUDE
com.cepmuvakkit.conversion.HijriCalendarWidgetGreen:
    91:91:public static java.lang.String getSharedPreferencesNameForAppWidget(android.content.Context,int)
    96:96:public static android.content.SharedPreferences getSharedPreferencesForAppWidget(android.content.Context,int)
com.cepmuvakkit.conversion.R:
    10:10:public R()
com.cepmuvakkit.conversion.R$array
com.cepmuvakkit.conversion.R$attr
com.cepmuvakkit.conversion.R$color
com.cepmuvakkit.conversion.R$drawable
com.cepmuvakkit.conversion.R$id
com.cepmuvakkit.conversion.R$layout
com.cepmuvakkit.conversion.R$menu
com.cepmuvakkit.conversion.R$string
com.cepmuvakkit.conversion.R$style
com.cepmuvakkit.conversion.R$styleable:
    470:470:public R$styleable()
com.cepmuvakkit.conversion.R$xml
com.cepmuvakkit.conversion.hicricalendar.HicriCalendar:
    139:139:public int getHijriMonth()
    250:250:public java.lang.String getHicriTakvim()
    254:254:public java.lang.String getHijriMonthName()
    270:338:public java.lang.String checkIfHolyDay(boolean)
    343:345:public java.lang.String getDay()
com.cepmuvakkit.conversion.hicricalendar.HicriCalendarAlperen
com.cepmuvakkit.conversion.libration.Moon:
    static final double P2
    static final double ARC
    static final double coseps
    static final double sineps
    static final double K
    48:50:double beta()
    55:59:double phase()
com.cepmuvakkit.conversion.libration.MoonCompute
com.cepmuvakkit.conversion.libration.MoonLibrationTest2
com.cepmuvakkit.conversion.libration.MoonPositionAngle:
    55:66:public double JD(int,int,int,double)
com.cepmuvakkit.conversion.libration.compute:
    29:56:public java.lang.String DMS(double)
    61:79:public java.lang.String DM(double)
    84:94:public java.lang.String HM(double)
    99:120:public int caldat(int,double)
    140:145:double THETA0(double)
    150:151:public double azimuth(double,double,double,double,double)
    156:164:public double JD(int,int,int,double)
com.cepmuvakkit.conversion.phaseEvents.MonthPhases:
    private double jd
    205:207:public int getLunation()
    210:210:public double getMoonAgeConjuction()
com.cepmuvakkit.conversion.phaseEvents.PhaseMoment
com.cepmuvakkit.conversion.phaseEvents.PhaseMoment$Phases
com.cepmuvakkit.conversion.settings.ApplicationConstants
com.cepmuvakkit.conversion.settings.LunarCalendarSettings:
    public java.text.DecimalFormat twoDigitFormat
    21:21:public double getJulianDay()
    35:36:public static void setInstance(com.cepmuvakkit.conversion.settings.LunarCalendarSettings)
    71:72:public void setTemperature(int)
    75:75:public int getElongation()
    79:80:public void setElongation(int)
    87:88:public void setPressure(int)
    121:122:public void setAdjusment(int)
com.cepmuvakkit.conversion.views.MoonCanvasView:
    45:48:public MoonCanvasView(android.content.Context,android.util.AttributeSet)
    51:54:public MoonCanvasView(android.content.Context,android.util.AttributeSet,int)
com.cepmuvakkit.test.AstronomicalInfoTest
com.cepmuvakkit.test.AstronomicalInfoTestDetail
com.cepmuvakkit.test.AstronomicalInfoTestDetailAlp
com.cepmuvakkit.test.HicriCalTest
com.cepmuvakkit.test.HicriCalendarAlpTest
com.cepmuvakkit.test.MoonObserveRegion
com.cepmuvakkit.test.MoonPhaseTest
com.cepmuvakkit.test.MoonRiseSetTest
com.cepmuvakkit.test.PrayerTimesTests
com.cepmuvakkit.test.PrayerTimesTests2
com.cepmuvakkit.times.posAlgo.AstroLib:
    16:16:public AstroLib()
    125:125:public static double getJulianCentury(double)
    425:425:public static byte isPreceedingOrFollowingDay(double,double)
    444:450:public static java.lang.String isPreceedingOrFollowingDayStr(double,double)
    576:577:public static java.lang.String fromJulianToCalendarStr(double)
    589:590:public static java.lang.String fromJulianToDDMMYYYY(double)
    597:597:public static java.lang.String getHHMMSSfromGreCal(java.util.GregorianCalendar)
    604:604:public static java.lang.String getDDMMHHMMSSfromGreCal(java.util.GregorianCalendar)
    618:619:public static java.lang.String fromJulianToCalendarDateStr(double)
    675:695:static double refractionCorrection(double)
com.cepmuvakkit.times.posAlgo.Dms
com.cepmuvakkit.times.posAlgo.EarthHeading
com.cepmuvakkit.times.posAlgo.EarthPosition
com.cepmuvakkit.times.posAlgo.Equatorial:
    16:19:Equatorial(double,double)
com.cepmuvakkit.times.posAlgo.HigherLatitude
com.cepmuvakkit.times.posAlgo.Horizontal:
    21:24:public Horizontal(double,double)
    35:36:public void setAzimuth(double)
    39:40:public void setElevation(double)
    43:51:public com.cepmuvakkit.times.posAlgo.ScreenPosition toScreenPosition(android.graphics.Canvas,int,boolean)
    56:62:public com.cepmuvakkit.times.posAlgo.ScreenPosition toScreenPosition(int,int)
com.cepmuvakkit.times.posAlgo.LunarPosition:
    399:474:void calculateMoonRiseTransitSetStr(double,double,double,double,int,int,int)
com.cepmuvakkit.times.posAlgo.MATH:
    public static final double SQRT3
    public static final double LOGdiv2
    3:3:public MATH()
    11:11:public static int round(float)
    15:15:public static long round(double)
    113:113:public static double frac(double)
    238:238:public static double Frac(double)
com.cepmuvakkit.times.posAlgo.Methods
com.cepmuvakkit.times.posAlgo.MoonPhaseAngleWithoutDeclination
com.cepmuvakkit.times.posAlgo.PTimes
com.cepmuvakkit.times.posAlgo.ScreenPosition
com.cepmuvakkit.times.posAlgo.SolarPosition:
    187:193:double limitMinutes(double)
    717:717:double greenwichMeanSiderealTime(double,double)
    763:763:double sunMeanLongitude(double)
    821:821:double observerHourAngle(double,double,double)
    825:825:double sunEquatorialHorizontalParallax(double)
    835:852:void sunRightAscensionParallaxAndTopocentricDec(double,double,double,double,double,double,double)
    855:855:double topocentricSunRightAscension(double,double)
    859:859:double topocentricLocalHourAngle(double,double)
    864:867:double topocentricElevationAngle(double,double,double)
    874:883:double atmosphericRefractionCorrection(double,double,double,double)
    887:887:double topocentricElevationAngleCorrected(double,double)
    891:891:double topocentricZenithAngle(double)
    896:899:double topocentricAzimuthAngleNeg180180(double,double,double)
    906:906:double topocentricAzimuthAngleZero360(double)
    911:914:double surfaceIncidenceAngle(double,double,double,double)
    948:958:void approxSalatTimes(double[],double[])
    961:969:void approxKerahatTimes(double[],double[])
    1014:1065:public void calculateSunRiseTransitSet(double[],double)
    1129:1229:public double[] calculateSalatTimes(double,double,double,double,int,int,int,double,double)
    1239:1331:public double[] calculateKerahetTimes(double,double,double,double,int,int,int,double,double)
    1467:1479:double calculateEclipticTrueObliquity(double,double)
    1502:1502:double calculateEquationOfTime(double,double,double,double)
com.cepmuvakkit.times.posAlgo.SunMoonPosition:
    46:46:public com.cepmuvakkit.times.posAlgo.Ecliptic getMoonPosEcliptic()
    54:54:public com.cepmuvakkit.times.posAlgo.Equatorial getMoonPosEquatorial()
    58:58:public com.cepmuvakkit.times.posAlgo.Ecliptic getSolarPosEc()
    62:62:public com.cepmuvakkit.times.posAlgo.Horizontal getSunPosition()
    84:91:public double getMoonPhaseAngle()
    98:98:public double getMoonPhaseAngleWithoutDeclination(double)
    102:103:public com.cepmuvakkit.times.posAlgo.EarthHeading getQiblaAngle(double,double)
    107:115:static double MapTo0To360Range(double)
    119:119:public double illumunatedFractionofMoon(double,double)
