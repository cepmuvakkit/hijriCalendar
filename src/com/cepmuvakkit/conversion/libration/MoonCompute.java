package com.cepmuvakkit.conversion.libration;
/*      */ class MoonCompute
/*      */ {
/* 3163 */   final double K = 0.0174532925199433D;
/*      */   double RA;
/*      */   double DEC;
/*      */   double B;
/*      */   double L;
/*      */   double elev;
/*      */ 
/*      */   public MoonCompute(double JD, double dT)
/*      */   {
/* 3179 */     double T = (JD + dT / 86400.0D - 2451545.0D) / 36525.0D;
/*      */ 
/* 3187 */     double eps = 0.0174532925199433D * (23.433333333333334D + (21.448D - 46.814999999999998D * T - 0.00059D * T * T + 0.001813D * T * T * T) / 3600.0D);
/*      */ 
/* 3192 */     double coseps = Math.cos(eps);
/* 3193 */     double sineps = Math.sin(eps);
/*      */ 
/* 3195 */     double Ls = 0.0174532925199433D * (218.3164591D + 481267.88134235999D * T - 0.0013268D * T * T + T * T * T / 538841.0D - T * T * T * T / 65194000.0D);
/* 3196 */     double D = 0.0174532925199433D * (297.85020420000001D + 445267.11151680001D * T - 0.00163D * T * T + T * T * T / 545868.0D - T * T * T * T / 113065000.0D);
/* 3197 */     double M = 0.0174532925199433D * (357.52910919999999D + 35999.050290899999D * T - 0.0001536D * T * T + T * T * T / 24490000.0D);
/* 3198 */     double Ms = 0.0174532925199433D * (134.96341140000001D + 477198.8676313D * T + 0.008997D * T * T + T * T * T / 69699.0D - T * T * T * T / 14712000.0D);
/* 3199 */     double F = 0.0174532925199433D * (93.272099299999994D + 483202.01752729999D * T - 0.0034029D * T * T - T * T * T / 3526000.0D + T * T * T * T / 863310000.0D);
/* 3200 */     double E = 1.0D - 0.002516D * T - 7.4E-006D * T * T;
/*      */ 
/* 3202 */     double A1 = 0.0174532925199433D * (119.75D + 131.84899999999999D * T);
/* 3203 */     double A2 = 0.0174532925199433D * (53.090000000000003D + 479264.28999999998D * T);
/* 3204 */     double A3 = 0.0174532925199433D * (313.44999999999999D + 481266.484D * T);
/*      */ 
/* 3206 */     this.L = (L0(D, M, Ms, F, E) + 3958.0D * Math.sin(A1) + 1962.0D * Math.sin(Ls - F) + 318.0D * Math.sin(A2));
/*      */ 
/* 3208 */     this.L = (this.L * 1.0E-006D % 360.0D);
/*      */ 
/* 3210 */     double LS = Ls / 0.0174532925199433D;
/* 3211 */     LS %= 360.0D;
/*      */ 
/* 3219 */     this.L = (LS + this.L + deltaPSI(T));
/*      */ 
/* 3225 */     if (this.L < 0.0D) this.L += 360.0D;
/*      */ 
/* 3227 */     this.B = (B0(D, M, Ms, F, E) - 2235.0D * Math.sin(Ls) + 382.0D * Math.sin(A3) + 175.0D * Math.sin(A1 - F) + 175.0D * Math.sin(A1 + F) + 127.0D * Math.sin(Ls - Ms) - 115.0D * Math.sin(Ls + Ms));
/*      */ 
/* 3229 */     this.B = (this.B * 1.0E-006D % 360.0D);
/*      */ 
/* 3231 */     this.RA = (Math.atan2(Math.sin(0.0174532925199433D * this.L) * coseps - Math.tan(0.0174532925199433D * this.B) * sineps, Math.cos(0.0174532925199433D * this.L)) / 0.0174532925199433D);
/* 3232 */     if (this.RA < 0.0D) this.RA += 360.0D;
/*      */ 
/* 3237 */     this.DEC = (Math.asin(Math.sin(0.0174532925199433D * this.B) * coseps + Math.cos(0.0174532925199433D * this.B) * sineps * Math.sin(0.0174532925199433D * this.L)) / 0.0174532925199433D);
/*      */   }
/*      */ 
/*      */   public double deltaPSI(double T)
/*      */   {
/* 3246 */     double LS = 280.4665D + 36000.769800000002D * T;
/* 3247 */     double LM = 218.31649999999999D + 481267.88130000001D * T;
/*      */ 
/* 3251 */     double omega = 125.04452000000001D - 1934.1362610000001D * T + 0.0020708D * T * T + T * T * T / 450000.0D;
/* 3252 */     double deltaPsi = -17.199999999999999D * Math.sin(0.0174532925199433D * omega) - 1.32D * Math.sin(0.03490658503988659D * LS) - 0.23D * Math.sin(0.03490658503988659D * LM) + 0.21D * Math.sin(0.03490658503988659D * omega);
/*      */ 
/* 3254 */     return deltaPsi / 3600.0D;
/*      */   }
/*      */ 
/*      */   double L0(double D, double M, double Ms, double F, double E)
/*      */   {
/* 3259 */     double[][] L = { 
/* 3260 */       { 6288774.0D, 0.0D, 0.0D, 1.0D, 0.0D }, 
/* 3261 */       { 1274027.0D, 2.0D, 0.0D, -1.0D, 0.0D }, 
/* 3262 */       { 658314.0D, 2.0D, 0.0D, 0.0D, 0.0D }, 
/* 3263 */       { 213618.0D, 0.0D, 0.0D, 2.0D, 0.0D }, 
/* 3264 */       { -185116.0D, 0.0D, 1.0D, 0.0D, 0.0D }, 
/* 3265 */       { -114332.0D, 0.0D, 0.0D, 0.0D, 2.0D }, 
/* 3266 */       { 58793.0D, 2.0D, 0.0D, -2.0D, 0.0D }, 
/* 3267 */       { 57066.0D, 2.0D, -1.0D, -1.0D, 0.0D }, 
/* 3268 */       { 53322.0D, 2.0D, 0.0D, 1.0D, 0.0D }, 
/* 3269 */       { 45758.0D, 2.0D, -1.0D, 0.0D, 0.0D }, 
/* 3270 */       { -40923.0D, 0.0D, 1.0D, -1.0D, 0.0D }, 
/* 3271 */       { -34720.0D, 1.0D, 0.0D, 0.0D, 0.0D }, 
/* 3272 */       { -30383.0D, 0.0D, 1.0D, 1.0D, 0.0D }, 
/* 3273 */       { 15327.0D, 2.0D, 0.0D, 0.0D, -2.0D }, 
/* 3274 */       { -12528.0D, 0.0D, 0.0D, 1.0D, 2.0D }, 
/* 3275 */       { 10980.0D, 0.0D, 0.0D, 1.0D, -2.0D }, 
/* 3276 */       { 10675.0D, 4.0D, 0.0D, -1.0D, 0.0D }, 
/* 3277 */       { 10034.0D, 0.0D, 0.0D, 3.0D, 0.0D }, 
/* 3278 */       { 8548.0D, 4.0D, 0.0D, -2.0D, 0.0D }, 
/* 3279 */       { -7888.0D, 2.0D, 1.0D, -1.0D, 0.0D }, 
/* 3280 */       { -6766.0D, 2.0D, 1.0D, 0.0D, 0.0D }, 
/* 3281 */       { -5163.0D, 1.0D, 0.0D, -1.0D, 0.0D }, 
/* 3282 */       { 4987.0D, 1.0D, 1.0D, 0.0D, 0.0D }, 
/* 3283 */       { 4036.0D, 2.0D, -1.0D, 1.0D, 0.0D }, 
/* 3284 */       { 3994.0D, 2.0D, 0.0D, 2.0D, 0.0D }, 
/* 3285 */       { 3861.0D, 4.0D, 0.0D, 0.0D, 0.0D }, 
/* 3286 */       { 3665.0D, 2.0D, 0.0D, -3.0D, 0.0D }, 
/* 3287 */       { -2689.0D, 0.0D, 1.0D, -2.0D, 0.0D }, 
/* 3288 */       { -2602.0D, 2.0D, 0.0D, -1.0D, 2.0D }, 
/* 3289 */       { 2390.0D, 2.0D, -1.0D, -2.0D, 0.0D }, 
/* 3290 */       { -2348.0D, 1.0D, 0.0D, 1.0D, 0.0D }, 
/* 3291 */       { 2236.0D, 2.0D, -2.0D, 0.0D, 0.0D }, 
/* 3292 */       { -2120.0D, 0.0D, 1.0D, 2.0D, 0.0D }, 
/* 3293 */       { -2069.0D, 0.0D, 2.0D, 0.0D, 0.0D }, 
/* 3294 */       { 2048.0D, 2.0D, -2.0D, -1.0D, 0.0D }, 
/* 3295 */       { -1773.0D, 2.0D, 0.0D, 1.0D, -2.0D }, 
/* 3296 */       { -1595.0D, 2.0D, 0.0D, 0.0D, 2.0D }, 
/* 3297 */       { 1215.0D, 4.0D, -1.0D, -1.0D, 0.0D }, 
/* 3298 */       { -1110.0D, 0.0D, 0.0D, 2.0D, 2.0D }, 
/* 3299 */       { -892.0D, 3.0D, 0.0D, -1.0D, 0.0D }, 
/* 3300 */       { -810.0D, 2.0D, 1.0D, 1.0D, 0.0D }, 
/* 3301 */       { 759.0D, 4.0D, -1.0D, -2.0D, 0.0D }, 
/* 3302 */       { -713.0D, 0.0D, 2.0D, -1.0D, 0.0D }, 
/* 3303 */       { -700.0D, 2.0D, 2.0D, -1.0D, 0.0D }, 
/* 3304 */       { 691.0D, 2.0D, 1.0D, -2.0D, 0.0D }, 
/* 3305 */       { 596.0D, 2.0D, -1.0D, 0.0D, -2.0D }, 
/* 3306 */       { 549.0D, 4.0D, 0.0D, 1.0D, 0.0D }, 
/* 3307 */       { 537.0D, 0.0D, 0.0D, 4.0D, 0.0D }, 
/* 3308 */       { 520.0D, 4.0D, -1.0D, 0.0D, 0.0D }, 
/* 3309 */       { -487.0D, 1.0D, 0.0D, -2.0D, 0.0D }, 
/* 3310 */       { -399.0D, 2.0D, 1.0D, 0.0D, -2.0D }, 
/* 3311 */       { -381.0D, 0.0D, 0.0D, 2.0D, -2.0D }, 
/* 3312 */       { 351.0D, 1.0D, 1.0D, 1.0D, 0.0D }, 
/* 3313 */       { -340.0D, 3.0D, 0.0D, -2.0D, 0.0D }, 
/* 3314 */       { 330.0D, 4.0D, 0.0D, -3.0D, 0.0D }, 
/* 3315 */       { 327.0D, 2.0D, -1.0D, 2.0D, 0.0D }, 
/* 3316 */       { -323.0D, 0.0D, 2.0D, 1.0D, 0.0D }, 
/* 3317 */       { 299.0D, 1.0D, 1.0D, -1.0D, 0.0D }, 
/* 3318 */       { 294.0D, 2.0D, 0.0D, 3.0D, 0.0D } };
/*      */ 
/* 3321 */     double l = 0.0D;
/* 3322 */     for (int i = 0; i < 59; i++) {
/* 3323 */       double term = L[i][0] * Math.sin(L[i][1] * D + L[i][2] * M + L[i][3] * Ms + L[i][4] * F);
/* 3324 */       if (Math.abs(L[i][2]) == 1.0D) term = E * term;
/* 3325 */       if (Math.abs(L[i][2]) == 2.0D) term = E * E * term;
/* 3326 */       l += term;
/*      */     }
/* 3328 */     return l;
/*      */   }
/*      */ 
/*      */   double B0(double D, double M, double Ms, double F, double E)
/*      */   {
/* 3333 */     double[][] L = { 
/* 3334 */       { 5128122.0D, 0.0D, 0.0D, 0.0D, 1.0D }, 
/* 3335 */       { 280602.0D, 0.0D, 0.0D, 1.0D, 1.0D }, 
/* 3336 */       { 277693.0D, 0.0D, 0.0D, 1.0D, -1.0D }, 
/* 3337 */       { 173237.0D, 2.0D, 0.0D, 0.0D, -1.0D }, 
/* 3338 */       { 55413.0D, 2.0D, 0.0D, -1.0D, 1.0D }, 
/* 3339 */       { 46271.0D, 2.0D, 0.0D, -1.0D, -1.0D }, 
/* 3340 */       { 32573.0D, 2.0D, 0.0D, 0.0D, 1.0D }, 
/* 3341 */       { 17198.0D, 0.0D, 0.0D, 2.0D, 1.0D }, 
/* 3342 */       { 9266.0D, 2.0D, 0.0D, 1.0D, -1.0D }, 
/* 3343 */       { 8822.0D, 0.0D, 0.0D, 2.0D, -1.0D }, 
/* 3344 */       { 8216.0D, 2.0D, -1.0D, 0.0D, -1.0D }, 
/* 3345 */       { 4324.0D, 2.0D, 0.0D, -2.0D, -1.0D }, 
/* 3346 */       { 4200.0D, 2.0D, 0.0D, 1.0D, 1.0D }, 
/* 3347 */       { -3359.0D, 2.0D, 1.0D, 0.0D, -1.0D }, 
/* 3348 */       { 2463.0D, 2.0D, -1.0D, -1.0D, 1.0D }, 
/* 3349 */       { 2211.0D, 2.0D, -1.0D, 0.0D, 1.0D }, 
/* 3350 */       { 2065.0D, 2.0D, -1.0D, -1.0D, -1.0D }, 
/* 3351 */       { -1870.0D, 0.0D, 1.0D, -1.0D, -1.0D }, 
/* 3352 */       { 1828.0D, 4.0D, 0.0D, -1.0D, -1.0D }, 
/* 3353 */       { -1794.0D, 0.0D, 1.0D, 0.0D, 1.0D }, 
/* 3354 */       { -1749.0D, 0.0D, 0.0D, 0.0D, 3.0D }, 
/* 3355 */       { -1565.0D, 0.0D, 1.0D, -1.0D, 1.0D }, 
/* 3356 */       { -1491.0D, 1.0D, 0.0D, 0.0D, 1.0D }, 
/* 3357 */       { -1475.0D, 0.0D, 1.0D, 1.0D, 1.0D }, 
/* 3358 */       { -1410.0D, 0.0D, 1.0D, 1.0D, -1.0D }, 
/* 3359 */       { -1344.0D, 0.0D, 1.0D, 0.0D, -1.0D }, 
/* 3360 */       { -1335.0D, 1.0D, 0.0D, 0.0D, -1.0D }, 
/* 3361 */       { 1107.0D, 0.0D, 0.0D, 3.0D, 1.0D }, 
/* 3362 */       { 1021.0D, 4.0D, 0.0D, 0.0D, -1.0D }, 
/* 3363 */       { 833.0D, 4.0D, 0.0D, -1.0D, 1.0D }, 
/* 3364 */       { 777.0D, 0.0D, 0.0D, 1.0D, -3.0D }, 
/* 3365 */       { 671.0D, 4.0D, 0.0D, -2.0D, 1.0D }, 
/* 3366 */       { 607.0D, 2.0D, 0.0D, 0.0D, -3.0D }, 
/* 3367 */       { 596.0D, 2.0D, 0.0D, 2.0D, -1.0D }, 
/* 3368 */       { 491.0D, 2.0D, -1.0D, 1.0D, -1.0D }, 
/* 3369 */       { -451.0D, 2.0D, 0.0D, -2.0D, 1.0D }, 
/* 3370 */       { 439.0D, 0.0D, 0.0D, 3.0D, -1.0D }, 
/* 3371 */       { 422.0D, 2.0D, 0.0D, 2.0D, 1.0D }, 
/* 3372 */       { 421.0D, 2.0D, 0.0D, -3.0D, -1.0D }, 
/* 3373 */       { -366.0D, 2.0D, 1.0D, -1.0D, 1.0D }, 
/* 3374 */       { -351.0D, 2.0D, 1.0D, 0.0D, 1.0D }, 
/* 3375 */       { 331.0D, 4.0D, 0.0D, 0.0D, 1.0D }, 
/* 3376 */       { 315.0D, 2.0D, -1.0D, 1.0D, 1.0D }, 
/* 3377 */       { 302.0D, 2.0D, -2.0D, 0.0D, -1.0D }, 
/* 3378 */       { -283.0D, 0.0D, 0.0D, 1.0D, 3.0D }, 
/* 3379 */       { -229.0D, 2.0D, 1.0D, 1.0D, -1.0D }, 
/* 3380 */       { 223.0D, 1.0D, 1.0D, 0.0D, -1.0D }, 
/* 3381 */       { 223.0D, 1.0D, 1.0D, 0.0D, 1.0D }, 
/* 3382 */       { -220.0D, 0.0D, 1.0D, -2.0D, -1.0D }, 
/* 3383 */       { -220.0D, 2.0D, 1.0D, -1.0D, -1.0D }, 
/* 3384 */       { -185.0D, 1.0D, 0.0D, 1.0D, 1.0D }, 
/* 3385 */       { 181.0D, 2.0D, -1.0D, -2.0D, -1.0D }, 
/* 3386 */       { -177.0D, 0.0D, 1.0D, 2.0D, 1.0D }, 
/* 3387 */       { 176.0D, 4.0D, 0.0D, -2.0D, -1.0D }, 
/* 3388 */       { 166.0D, 4.0D, -1.0D, -1.0D, -1.0D }, 
/* 3389 */       { -164.0D, 1.0D, 0.0D, 1.0D, -1.0D }, 
/* 3390 */       { 132.0D, 4.0D, 0.0D, 1.0D, -1.0D }, 
/* 3391 */       { -119.0D, 1.0D, 0.0D, -1.0D, -1.0D }, 
/* 3392 */       { 115.0D, 4.0D, -1.0D, 0.0D, -1.0D }, 
/* 3393 */       { 107.0D, 2.0D, -2.0D, 0.0D, 1.0D } };
/*      */ 
/* 3396 */     double b = 0.0D;
/* 3397 */     for (int i = 0; i <= 59; i++) {
/* 3398 */       double term = L[i][0] * Math.sin(L[i][1] * D + L[i][2] * M + L[i][3] * Ms + L[i][4] * F);
/* 3399 */       if (Math.abs(L[i][2]) == 1.0D) term *= E;
/* 3400 */       if (Math.abs(L[i][2]) == 2.0D) term = term * E * E;
/* 3401 */       b += term;
/*      */     }
/* 3403 */     return b;
/*      */   }
/*      */ 
/*      */   double alpha() {
/* 3407 */     return this.RA;
/*      */   }
/*      */ 
/*      */   double delta() {
/* 3411 */     return this.DEC;
/*      */   }
/*      */ 
/*      */   double beta() {
/* 3415 */     return this.B;
/*      */   }
/*      */ 
/*      */   double lambda() {
/* 3419 */     return this.L;
/*      */   }
/*      */ 
/*      */   double moonRA()
/*      */   {
/* 3424 */     return this.RA;
/*      */   }
/*      */ 
/*      */   double moonDEC()
/*      */   {
/* 3429 */     return this.DEC;
/*      */   }
/*      */ 
/*      */   double computeR(double jd)
/*      */   {

/*      */ 
/* 3437 */     double T = (jd - 2451545.0D) / 36525.0D;
/* 3438 */     double T3 = Math.pow(T, 3.0D);
/* 3439 */     double T4 = Math.pow(T, 4.0D);
/*      */ 
/* 3441 */     double D = 0.0174532925199433D * (297.85020420000001D + 445267.11151680001D * T - 0.00163D * T * T + T3 / 545868.0D - T4 / 113065000.0D);
/* 3442 */     double M = 0.0174532925199433D * (357.52910919999999D + 35999.050290899999D * T - 0.0001536D * T * T + T3 / 24490000.0D);
/* 3443 */     double MS = 0.0174532925199433D * (134.96341140000001D + 477198.8676313D * T + 0.008997D * T * T + T3 / 69699.0D - T4 / 14712000.0D);
/* 3444 */     double F = 0.0174532925199433D * (93.272099299999994D + 483202.01752729999D * T - 0.0034029D * T * T - T3 / 3526000.0D + T4 / 863310000.0D);
/* 3445 */     double E = 1.0D - 0.002516D * T - 7.4E-006D * T * T;
/* 3446 */     double r = -20905355.0D * Math.cos(MS) - 3699111.0D * Math.cos(2.0D * D - MS) - 2955968.0D * Math.cos(2.0D * D) - 569925.0D * Math.cos(2.0D * MS) + E * 48888.0D * Math.cos(M) - 3149.0D * Math.cos(2.0D * F);
/* 3447 */     r = r + 246158.0D * Math.cos(2.0D * D - 2.0D * MS) - E * 152138.0D * Math.cos(2.0D * D - M - MS) - 170733.0D * Math.cos(2.0D * D + MS) - E * 204586.0D * Math.cos(2.0D * D - M) - E * 129620.0D * Math.cos(M - MS);
/* 3448 */     r = r + 108743.0D * Math.cos(D) + E * 104755.0D * Math.cos(M + MS) + 10321.0D * Math.cos(2.0D * D - 2.0D * F) + 79661.0D * Math.cos(MS - 2.0D * F) - 34782.0D * Math.cos(4.0D * D - MS) - 23210.0D * Math.cos(3.0D * MS);
/* 3449 */     r = r - 21636.0D * Math.cos(4.0D * D - 2.0D * MS) + E * 24208.0D * Math.cos(2.0D * D + M - MS) + E * 30824.0D * Math.cos(2.0D * D + M) - 8379.0D * Math.cos(D - MS) - E * 16675.0D * Math.cos(D + M);
/* 3450 */     r = r - E * 12831.0D * Math.cos(2.0D * D - M + MS) - 10445.0D * Math.cos(2.0D * D + 2.0D * MS) - 11650.0D * Math.cos(4.0D * D) + 14403.0D * Math.cos(2.0D * D - 3.0D * MS) - E * 7003.0D * Math.cos(M - 2.0D * MS);
/* 3451 */     r = r + E * 10056.0D * Math.cos(2.0D * D - M - 2.0D * MS) + 6322.0D * Math.cos(D + MS) - E * E * 9884.0D * Math.cos(2.0D * D - 2.0D * M) + E * 5751.0D * Math.cos(M + 2.0D * MS) - E * E * 4950.0D * Math.cos(2.0D * D - 2.0D * M - MS);
/* 3452 */     r = r + 4130.0D * Math.cos(2.0D * D + MS - 2.0D * F) - E * 3958.0D * Math.cos(4.0D * D - M - MS) + 3258.0D * Math.cos(3.0D * D - MS) + E * 2616.0D * Math.cos(2.0D * D + M + MS) - E * 1897.0D * Math.cos(4.0D * D - M - 2.0D * MS);
/* 3453 */     r = r - E * E * 2117.0D * Math.cos(2.0D * M - MS) + E * E * 2354.0D * Math.cos(2.0D * D + 2.0D * M - MS) - 1423.0D * Math.cos(4.0D * D + MS) - 1117.0D * Math.cos(4.0D * MS) - E * 1571.0D * Math.cos(4.0D * D - M);
/* 3454 */     r = r - 1739.0D * Math.cos(D - 2.0D * MS) - 4421.0D * Math.cos(2.0D * MS - 2.0D * F) + E * E * 1165.0D * Math.cos(2.0D * M + MS) + 8752.0D * Math.cos(2.0D * D - MS - 2.0D * F);
/* 3455 */     return 385000.56D + r / 1000.0D;
/*      */   }
/*      */ }

/* Location:           D:\moonsighting\moonlibration0999.jar
 * Qualified Name:     MoonCompute
 * JD-Core Version:    0.6.1
 */